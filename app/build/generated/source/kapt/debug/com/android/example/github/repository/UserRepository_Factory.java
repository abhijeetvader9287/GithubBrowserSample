// Generated by Dagger (https://google.github.io/dagger).
package com.android.example.github.repository;

import com.android.example.github.AppExecutors;
import com.android.example.github.api.GithubService;
import com.android.example.github.db.UserDao;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class UserRepository_Factory implements Factory<UserRepository> {
  private final Provider<AppExecutors> appExecutorsProvider;

  private final Provider<UserDao> userDaoProvider;

  private final Provider<GithubService> githubServiceProvider;

  public UserRepository_Factory(
      Provider<AppExecutors> appExecutorsProvider,
      Provider<UserDao> userDaoProvider,
      Provider<GithubService> githubServiceProvider) {
    this.appExecutorsProvider = appExecutorsProvider;
    this.userDaoProvider = userDaoProvider;
    this.githubServiceProvider = githubServiceProvider;
  }

  @Override
  public UserRepository get() {
    return new UserRepository(
        appExecutorsProvider.get(), userDaoProvider.get(), githubServiceProvider.get());
  }

  public static UserRepository_Factory create(
      Provider<AppExecutors> appExecutorsProvider,
      Provider<UserDao> userDaoProvider,
      Provider<GithubService> githubServiceProvider) {
    return new UserRepository_Factory(appExecutorsProvider, userDaoProvider, githubServiceProvider);
  }
}
