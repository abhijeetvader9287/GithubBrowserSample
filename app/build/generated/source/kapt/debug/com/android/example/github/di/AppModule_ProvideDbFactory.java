// Generated by Dagger (https://google.github.io/dagger).
package com.android.example.github.di;

import android.app.Application;
import com.android.example.github.db.GithubDb;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class AppModule_ProvideDbFactory implements Factory<GithubDb> {
  private final AppModule module;

  private final Provider<Application> appProvider;

  public AppModule_ProvideDbFactory(AppModule module, Provider<Application> appProvider) {
    this.module = module;
    this.appProvider = appProvider;
  }

  @Override
  public GithubDb get() {
    return Preconditions.checkNotNull(
        module.provideDb(appProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static AppModule_ProvideDbFactory create(
      AppModule module, Provider<Application> appProvider) {
    return new AppModule_ProvideDbFactory(module, appProvider);
  }

  public static GithubDb proxyProvideDb(AppModule instance, Application app) {
    return Preconditions.checkNotNull(
        instance.provideDb(app), "Cannot return null from a non-@Nullable @Provides method");
  }
}
